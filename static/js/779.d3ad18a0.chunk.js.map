{"version":3,"file":"static/js/779.d3ad18a0.chunk.js","mappings":"+RAEaA,EAAOC,EAAAA,GAAAA,GAAH,qDAIJC,EAAOD,EAAAA,GAAAA,GAAH,gEAIJE,EAAaF,EAAAA,GAAAA,EAAH,2D,SCyCvB,EA7CgB,WACd,OAAsCG,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAGRE,EAAAA,EAAAA,YAAU,WACRC,EAAYH,EACb,GAAE,CAACA,IAEJ,IAAMG,EAAW,mCAAG,WAAMH,GAAN,mGAEWI,EAAAA,EAAAA,IAAgBJ,GAF3B,UAEVK,EAFU,OAQW,KAJrBP,EAAcO,EAAaC,QAAQC,KAAI,YAE3C,MADiB,CAAEC,OADiD,EAAtBA,OACnBC,QADyC,EAAdA,QAGvD,KACeC,OARA,uBASdC,EAAAA,OAAAA,QAAe,4CATD,0BAYhBZ,EAAeD,GAZC,kDAchBa,EAAAA,OAAAA,QAAe,2CAdC,0DAAH,sDAkBjB,OACE,8BACc,OAAXb,QAAW,IAAXA,GAAAA,EAAaY,QACZ,SAACjB,EAAD,UACGK,EAAYS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACf,UAACd,EAAD,YACE,UAACC,EAAD,sBAAqBY,MACrB,uBAAIC,MAFKD,EADI,OAQnB,oEAIP,C,kMC/CKI,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAW,mCAAG,2GAAOC,EAAP,+BAAkB,GAAIC,EAAtB,+BAAoC,GAApC,kBAEOH,EAAAA,GAAAA,IAAA,UAClBE,EADkB,oBACEH,EADF,YACaI,IAHpB,cAEVC,EAFU,yBAKTA,EAASC,MALA,gCAOhB,IAAIC,MAAM,aAPM,yDAAH,qDAWJC,EAAc,WAEzB,OAAON,EADU,sBAElB,EAEYO,EAAiB,SAAAC,GAC5B,IACMN,EAAW,iBAAaM,GAC9B,OAAOR,EAFO,eAEeE,EAC9B,EAEYO,EAAkB,SAAAvB,GAC7B,IAAMe,EAAQ,gBAAYf,GAC1B,OAAOc,EAAYC,EACpB,EAEYS,EAAe,SAAAxB,GAC1B,IAAMe,EAAQ,gBAAYf,EAAZ,YACd,OAAOc,EAAYC,EACpB,EAEYX,EAAkB,SAAAJ,GAC7B,IAAMe,EAAQ,gBAAYf,EAAZ,YACd,OAAOc,EAAYC,EACpB,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\nmargin: 0;\nlist-style: none;`\n\nexport const Item = styled.li`\nborder: 1px dotted grey;\npadding: 10px;`\n\nexport const TextAuthor = styled.p`\nfont-size: 20px;\nfont-weight: 500;`","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { getMovieReviews } from '../../services/Api';\nimport { List, Item, TextAuthor } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviewsList, setReviewsList] = useState([]);\n  const { movieId } = useParams();\n  \n\n  useEffect(() => {\n    loadReviews(movieId);\n  }, [movieId]);\n\n  const loadReviews = async movieId => {\n    try {\n      const responseData = await getMovieReviews(movieId);\n      \n      const reviewsList = responseData.results.map(({ author, content }) => {\n        const castItem = { author, content };\n        return castItem;\n      });\n      if (reviewsList.length === 0) {\n        Notify.failure('Sorry, there are no reviews by this film');\n        return;\n      }\n      setReviewsList(reviewsList);\n    } catch (error) {\n      Notify.failure('Something went wrong. Please try again.');\n    }\n  };\n\n  return (\n    <>\n      {reviewsList?.length ? (\n        <List>\n          {reviewsList.map(({ author, content }) => (\n            <Item key={author}>\n              <TextAuthor>AUTHOR: {author}</TextAuthor>\n              <p>{content}</p>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <p>We don't have any reviews for this film</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '8d195799489102b1191d845f2ff9f57d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst fetchMovies = async (pathName = '', queryString = '') => {\n  try {\n    const response = await axios.get(\n      `${pathName}?api_key=${API_KEY}&${queryString}`\n    );\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n};\n\nexport const getTrending = () => {\n  const pathName = '/trending/movie/day';\n  return fetchMovies(pathName);\n};\n\nexport const getMovieSearch = query => {\n  const pathName = `search/movie`;\n  const queryString = `&query=${query}`;\n  return fetchMovies(pathName, queryString);\n};\n\nexport const getMovieDetails = movieId => {\n  const pathName = `movie/${movieId}`;\n  return fetchMovies(pathName);\n};\n\nexport const getMovieCast = movieId => {\n  const pathName = `movie/${movieId}/credits`;\n  return fetchMovies(pathName);\n};\n\nexport const getMovieReviews = movieId => {\n  const pathName = `movie/${movieId}/reviews`;\n  return fetchMovies(pathName);\n};\n"],"names":["List","styled","Item","TextAuthor","useState","reviewsList","setReviewsList","movieId","useParams","useEffect","loadReviews","getMovieReviews","responseData","results","map","author","content","length","Notify","API_KEY","axios","fetchMovies","pathName","queryString","response","data","Error","getTrending","getMovieSearch","query","getMovieDetails","getMovieCast"],"sourceRoot":""}