{"version":3,"file":"static/js/415.8112f963.chunk.js","mappings":"4MAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yL,SCAVE,EAAgB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACzC,OACE,yBACE,SAACN,EAAD,CAAYO,GAAE,kBAAaH,GAAME,MAAOA,EAAxC,SACGD,KAIR,ECTYG,EAAOP,EAAAA,GAAAA,GAAH,uGCEJQ,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAWJ,EAAY,EAAZA,MACtC,OACE,SAACE,EAAD,UACGE,EAAUC,KAAI,gBAAGP,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACb,SAACF,EAAD,CAAwBE,MAAOA,EAAOD,GAAIA,EAAIE,MAAOA,GAAjCF,EADP,KAKpB,C,mIC4BD,UAjCc,WACZ,OAA0CQ,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,GACD,GAAE,IAEH,IAAMA,EAAkB,mCAAG,gHAEIC,EAAAA,EAAAA,MAFJ,UAEjBC,EAFiB,OAOO,KAJxBC,EAAiBD,EAAaE,QAAQX,KAAI,YAE9C,MADc,CAAEP,GADiD,EAAhBA,GAC7BC,MAD6C,EAAZA,MAGtD,KACkBkB,OAPI,uBAQrBC,EAAAA,OAAAA,QAAe,8CARM,0BAWvBV,EAAiBO,GAXM,kDAavBG,EAAAA,OAAAA,QAAe,2CAbQ,0DAAH,qDAiBxB,OACE,iCACE,4CACA,SAAC,IAAD,CAAYd,UAAWG,EAAeP,MAAO,CAAEmB,KAAMV,OAG1D,C,kMCpCKW,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAW,mCAAG,2GAAOC,EAAP,+BAAkB,GAAIC,EAAtB,+BAAoC,GAApC,kBAEOH,EAAAA,GAAAA,IAAA,UAClBE,EADkB,oBACEH,EADF,YACaI,IAHpB,cAEVC,EAFU,yBAKTA,EAASC,MALA,gCAOhB,IAAIC,MAAM,aAPM,yDAAH,qDAWJd,EAAc,WAEzB,OAAOS,EADU,sBAElB,EAEYM,EAAiB,SAAAC,GAC5B,IACML,EAAW,iBAAaK,GAC9B,OAAOP,EAFO,eAEeE,EAC9B,EAEYM,EAAkB,SAAAC,GAC7B,IAAMR,EAAQ,gBAAYQ,GAC1B,OAAOT,EAAYC,EACpB,EAEYS,EAAe,SAAAD,GAC1B,IAAMR,EAAQ,gBAAYQ,EAAZ,YACd,OAAOT,EAAYC,EACpB,EAEYU,EAAkB,SAAAF,GAC7B,IAAMR,EAAQ,gBAAYQ,EAAZ,YACd,OAAOT,EAAYC,EACpB,C","sources":["components/MovieListItem/MovieListItem.styled.js","components/MovieListItem/MovieListItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkStyled = styled(NavLink)`\ndisplay: block;\npadding: 8px 8px;\nborder-radius: 4px;\ntext-decoration: none;\ncolor: black;\n\n\n&:hover {\n  color: white;\n  background-color: orangered;\n}`","import { PropTypes } from 'prop-types';\nimport { LinkStyled } from './MovieListItem.styled';\n\nexport const MovieListItem = ({ id, title, state }) => {\n  return (\n    <li>\n      <LinkStyled to={`/movies/${id}`} state={state}>\n        {title}\n      </LinkStyled>\n    </li>\n  );\n};\n\nMovieListItem.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  state: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\nmax-width: 300px;\ndisplay: flex;\nflex-direction: column;\nlist-style: none;\n`","import { PropTypes } from 'prop-types';\nimport { MovieListItem } from \"components/MovieListItem/MovieListItem\";\nimport { List } from './MoviesList.styled';\n\nexport const MoviesList = ({ filmsList, state }) => {\n  return (\n    <List>\n      {filmsList.map(({ id, title }) => (\n        <MovieListItem key={id} title={title} id={id} state={state}/>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  filmsList: PropTypes.array,\n  state: PropTypes.object,\n};\n","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { getTrending } from 'services/Api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\n const Home = () => {\n  const [trendingFilms, setTrendingFilms] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    loadTrendingMovies();\n  }, []);\n\n  const loadTrendingMovies = async () => {\n    try {\n      const responseData = await getTrending();\n      const trendingMovies = responseData.results.map(({ id, title }) => {\n        const movie = { id, title };\n        return movie;\n      });\n      if (trendingMovies.length === 0) {\n        Notify.failure('Sorry, there are no trending movies today.');\n        return;\n      }\n      setTrendingFilms(trendingMovies);\n    } catch (error) {\n      Notify.failure('Something went wrong. Please try again.');\n    }\n  };\n\n  return (\n    <>\n      <h1>Trending Today</h1>\n      <MoviesList filmsList={trendingFilms} state={{ from: location }} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '8d195799489102b1191d845f2ff9f57d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst fetchMovies = async (pathName = '', queryString = '') => {\n  try {\n    const response = await axios.get(\n      `${pathName}?api_key=${API_KEY}&${queryString}`\n    );\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n};\n\nexport const getTrending = () => {\n  const pathName = '/trending/movie/day';\n  return fetchMovies(pathName);\n};\n\nexport const getMovieSearch = query => {\n  const pathName = `search/movie`;\n  const queryString = `&query=${query}`;\n  return fetchMovies(pathName, queryString);\n};\n\nexport const getMovieDetails = movieId => {\n  const pathName = `movie/${movieId}`;\n  return fetchMovies(pathName);\n};\n\nexport const getMovieCast = movieId => {\n  const pathName = `movie/${movieId}/credits`;\n  return fetchMovies(pathName);\n};\n\nexport const getMovieReviews = movieId => {\n  const pathName = `movie/${movieId}/reviews`;\n  return fetchMovies(pathName);\n};\n"],"names":["LinkStyled","styled","NavLink","MovieListItem","id","title","state","to","List","MoviesList","filmsList","map","useState","trendingFilms","setTrendingFilms","location","useLocation","useEffect","loadTrendingMovies","getTrending","responseData","trendingMovies","results","length","Notify","from","API_KEY","axios","fetchMovies","pathName","queryString","response","data","Error","getMovieSearch","query","getMovieDetails","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}