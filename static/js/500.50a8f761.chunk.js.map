{"version":3,"file":"static/js/500.50a8f761.chunk.js","mappings":"4MAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yL,SCAVE,EAAgB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACzC,OACE,yBACE,SAACN,EAAD,CAAYO,GAAE,kBAAaH,GAAME,MAAOA,EAAxC,SACGD,KAIR,ECTYG,EAAOP,EAAAA,GAAAA,GAAH,uGCEJQ,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAWJ,EAAY,EAAZA,MACtC,OACE,SAACE,EAAD,UACGE,EAAUC,KAAI,gBAAGP,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACb,SAACF,EAAD,CAAwBE,MAAOA,EAAOD,GAAIA,EAAIE,MAAOA,GAAjCF,EADP,KAKpB,C,mLCXYQ,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAS1B,OACE,kBAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAcF,EAAKG,SAASD,YAAYE,MAC9CR,EAASM,GACTF,EAAKK,OACN,EAEC,WACE,kBAAOC,KAAK,OAAOC,YAAY,gBAAgBC,KAAK,iBACpD,mBAAQF,KAAK,SAAb,sBAGL,ECwCD,EAhDe,WAAO,IAAD,EACnB,GAA4CG,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3CC,GAAWC,EAAAA,EAAAA,OAOjBC,EAAAA,EAAAA,YAAU,WACRR,EAAkB,IACgB,IAA9BI,EAAYK,OAAOC,QAGvBC,EAAmBP,EACpB,GAAE,CAACA,IAEJ,IAAMO,EAAkB,mCAAG,WAAMP,GAAN,mGAEIQ,EAAAA,EAAAA,GAAeR,GAFnB,UAEjBS,EAFiB,OAQQ,KAJzBC,EAAkBD,EAAaE,QAAQhC,KAAI,YAE/C,MADc,CAAEP,GADkD,EAAhBA,GAC9BC,MAD8C,EAAZA,MAGvD,KACmBiC,OARG,uBASrBM,EAAAA,OAAAA,QACE,sEAEFhB,EAAkB,IAZG,0BAevBA,EAAkBc,GAfK,kDAiBvBE,EAAAA,OAAAA,QAAe,2CAjBQ,0DAAH,sDAqBxB,OACE,iCACE,SAAChC,EAAD,CAAWC,SApCW,SAAAgC,GAExBd,EAD6B,KAAVc,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,KAkCG,SAACpC,EAAA,EAAD,CAAYC,UAAWiB,EAAgBrB,MAAO,CAAEwC,KAAMZ,OAG3D,C,kMCpDKa,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAW,mCAAG,2GAAOC,EAAP,+BAAkB,GAAIC,EAAtB,+BAAoC,GAApC,kBAEOH,EAAAA,GAAAA,IAAA,UAClBE,EADkB,oBACEH,EADF,YACaI,IAHpB,cAEVC,EAFU,yBAKTA,EAASC,MALA,gCAOhB,IAAIC,MAAM,aAPM,yDAAH,qDAWJC,EAAc,WAEzB,OAAON,EADU,sBAElB,EAEYT,EAAiB,SAAAK,GAC5B,IACMM,EAAW,iBAAaN,GAC9B,OAAOI,EAFO,eAEeE,EAC9B,EAEYK,EAAkB,SAAAC,GAC7B,IAAMP,EAAQ,gBAAYO,GAC1B,OAAOR,EAAYC,EACpB,EAEYQ,EAAe,SAAAD,GAC1B,IAAMP,EAAQ,gBAAYO,EAAZ,YACd,OAAOR,EAAYC,EACpB,EAEYS,EAAkB,SAAAF,GAC7B,IAAMP,EAAQ,gBAAYO,EAAZ,YACd,OAAOR,EAAYC,EACpB,C","sources":["components/MovieListItem/MovieListItem.styled.js","components/MovieListItem/MovieListItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkStyled = styled(NavLink)`\ndisplay: block;\npadding: 8px 8px;\nborder-radius: 4px;\ntext-decoration: none;\ncolor: black;\n\n\n&:hover {\n  color: white;\n  background-color: orangered;\n}`","import { PropTypes } from 'prop-types';\nimport { LinkStyled } from './MovieListItem.styled';\n\nexport const MovieListItem = ({ id, title, state }) => {\n  return (\n    <li>\n      <LinkStyled to={`/movies/${id}`} state={state}>\n        {title}\n      </LinkStyled>\n    </li>\n  );\n};\n\nMovieListItem.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  state: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\nmax-width: 300px;\ndisplay: flex;\nflex-direction: column;\nlist-style: none;\n`","import { PropTypes } from 'prop-types';\nimport { MovieListItem } from \"components/MovieListItem/MovieListItem\";\nimport { List } from './MoviesList.styled';\n\nexport const MoviesList = ({ filmsList, state }) => {\n  return (\n    <List>\n      {filmsList.map(({ id, title }) => (\n        <MovieListItem key={id} title={title} id={id} state={state}/>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  filmsList: PropTypes.array,\n  state: PropTypes.object,\n};\n","import { PropTypes } from 'prop-types';\nexport const SearchBar = ({ onChange }) => {\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const searchValue = form.elements.searchValue.value;\n    onChange(searchValue);\n    form.reset();\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" placeholder=\"Search movies\" name='searchValue'></input>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  onChange: PropTypes.func,\n };\n","import { useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { getMovieSearch } from '../services/Api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchBar } from '../components/SearchBar/SearchBar';\nimport { useEffect } from 'react';\n\nconst Movies = () => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    setSearchedMovies([]);\n    if (searchQuery.trim().length === 0) {\n      return;\n    }\n    loadSearchedMovies(searchQuery);\n  }, [searchQuery]);\n\n  const loadSearchedMovies = async searchQuery => {\n    try {\n      const responseData = await getMovieSearch(searchQuery);\n\n      const searchedResults = responseData.results.map(({ id, title }) => {\n        const movie = { id, title };\n        return movie;\n      });\n      if (searchedResults.length === 0) {\n        Notify.failure(\n          'Sorry, there are no information by your query. Try another search.'\n        );\n        setSearchedMovies([]);\n        return;\n      }\n      setSearchedMovies(searchedResults);\n    } catch (error) {\n      Notify.failure('Something went wrong. Please try again.');\n    }\n  };\n\n  return (\n    <>\n      <SearchBar onChange={updateQueryString} />\n      <MoviesList filmsList={searchedMovies} state={{ from: location }} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '8d195799489102b1191d845f2ff9f57d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst fetchMovies = async (pathName = '', queryString = '') => {\n  try {\n    const response = await axios.get(\n      `${pathName}?api_key=${API_KEY}&${queryString}`\n    );\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n};\n\nexport const getTrending = () => {\n  const pathName = '/trending/movie/day';\n  return fetchMovies(pathName);\n};\n\nexport const getMovieSearch = query => {\n  const pathName = `search/movie`;\n  const queryString = `&query=${query}`;\n  return fetchMovies(pathName, queryString);\n};\n\nexport const getMovieDetails = movieId => {\n  const pathName = `movie/${movieId}`;\n  return fetchMovies(pathName);\n};\n\nexport const getMovieCast = movieId => {\n  const pathName = `movie/${movieId}/credits`;\n  return fetchMovies(pathName);\n};\n\nexport const getMovieReviews = movieId => {\n  const pathName = `movie/${movieId}/reviews`;\n  return fetchMovies(pathName);\n};\n"],"names":["LinkStyled","styled","NavLink","MovieListItem","id","title","state","to","List","MoviesList","filmsList","map","SearchBar","onChange","onSubmit","e","preventDefault","form","currentTarget","searchValue","elements","value","reset","type","placeholder","name","useState","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","useEffect","trim","length","loadSearchedMovies","getMovieSearch","responseData","searchedResults","results","Notify","query","from","API_KEY","axios","fetchMovies","pathName","queryString","response","data","Error","getTrending","getMovieDetails","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}